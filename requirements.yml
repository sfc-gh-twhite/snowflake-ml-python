---
# Add requirements information here and use `bazel run --config=pre_build //bazel/requirements:sync_requirements`
# to generate all other requirements files.
# Please provide the following fields when adding a new record:
# # Package Name Fields

# `name`: The name of the package. Set this if the package is available with the same name and is required in both `PyPI`
# and `conda`.

# `name_pypi`: The name of the package in `PyPI`. Set this only to indicate that it is available in `PyPI` only. You can
# also set this along with `name_conda` if the package has different names in `PyPI` and `conda`.

# `name_conda`: The name of the package in `conda`. Set this only to indicate that it is available in `conda` only. You
# can also set this along with `name_pypi` if the package has different names in `PyPI` and `conda`.

# (At least one of these three fields should be set.)

# # Development Version Fields

# `dev_version`: The version of the package to be pinned in the dev environment. Set this if the package is available
# with the same version and is required in both `PyPI` and conda.

# `dev_version_pypi`: The version from `PyPI` to be pinned in the dev environment. Set this only to indicate that it is
# available in `PyPI` only. You can also set this along with `dev_version_conda` if the package has different versions in
# `PyPI` and `conda`.

# `dev_version_conda`: The version from `conda` to be pinned in the dev environment. Set this only to indicate that it is
# available in `conda` only. You can also set this along with `dev_version_pypi` if the package has different versions in
# `PyPI` and `conda`.

# (At least one of these three fields should be set.)

# # Snowflake Anaconda Channel

# `from_channel`: Set this if the package is not available in the Snowflake Anaconda Channel
# (https://repo.anaconda.com/pkgs/snowflake).

# # Version Requirements Fields (for `snowflake-ml-python` release)

# `version_requirements`: The version requirements specifiers when this requirement is a dependency of the
# `snowflake-ml-python` release. Set this if the package is available with the same name and required in both `PyPI` and
# `conda`.

# `version_requirements_pypi`: The version requirements specifiers when this requirement is a dependency of the
#`snowflake-ml-python` release via `PyPI`. Set this only to indicate that it is required by the `PyPI` release only. You
# can also set this along with `version_requirements_conda` if the package has different versions in `PyPI` and `conda`.

# `version_requirements_conda`: The version requirements specifiers when this requirement is a dependency of the
# `snowflake-ml-python` release via `conda`. Set this only to indicate that it is required by the `conda` release only.
# You can also set this along with `version_requirements_pypi` if the package has different versions in `PyPI` and `conda`.

# (At least one of these three fields must be set to indicate that this package is a dependency of the release. If you
# don't want to constrain the version, set the field to an empty string.)

# # Extras Tags and Tags

# `requirements_extra_tags`: Set this to indicate that the package is an extras dependency of `snowflake-ml-python`.
# This requirement will be added to all extras tags specified here, and an `all` extras tag will be auto-generated to include
# all extras requirements. All extras requirements will be labeled as `run_constrained` in conda's meta.yaml.

# `tags`: Set tags to filter some of the requirements in specific cases. The current valid tags include:
#   - `deployment_core`: Used by model deployment to indicate dependencies required to execute model deployment code
#   on the server-side.
#   - `build_essential`: Used to indicate the packages composing the build environment.

- name: absl-py
  dev_version: 1.3.0
  version_requirements: '>=0.15,<2'
  tags:
    - build_essential
    - deployment_core
# For fsspec[http] in conda
- name: accelerate
  dev_version: 0.22.0
  from_channel: conda-forge
- name_conda: aiohttp
  dev_version_conda: 3.8.3
  version_requirements_conda: '!=4.0.0a0, !=4.0.0a1'
- name: anyio
  dev_version: 3.5.0
  version_requirements: '>=3.5.0,<4'
  tags:
    - deployment_core
- name: boto3
  dev_version: 1.24.28
- name_conda: conda-libmamba-solver
  dev_version_conda: 23.3.0
  tags:
    - build_essential
- name: cloudpickle
  dev_version: 2.0.0
  version_requirements: ''
  tags:
    - deployment_core
- name: cryptography
  dev_version: 39.0.1
  # Skipping version requirements as it should come as part of connector.
  # Only used in connection_params.py, which is an util library anyways.
- name: coverage
  dev_version: 6.3.2
- name: flask-cors
  dev_version: 3.0.10
- name: flask
  dev_version: 2.1.3
- name_pypi: fsspec[http]
  name_conda: fsspec
  dev_version: 2023.3.0
  version_requirements: '>=2022.11,<2024'
- name: httpx
  dev_version: 0.23.0
- name: inflection
  dev_version: 0.5.1
  tags:
    - build_essential
- name: jsonschema
  dev_version: 3.2.0
  tags:
    - build_essential
- name: joblib
  dev_version: 1.1.1
- name: lightgbm
  dev_version: 3.3.5
  version_requirements: ==3.3.5
  requirements_extra_tags:
    - lightgbm
  tags:
    - build_essential
- name: mlflow
  dev_version: 2.3.1
  version_requirements: '>=2.1.0,<2.4'
  requirements_extra_tags:
    - mlflow
- name: moto
  dev_version: 4.0.11
- name: mypy
  dev_version: 1.4.1
  from_channel: conda-forge
- name: networkx
  dev_version: 2.8.4
- name: numpy
  dev_version: 1.24.3
  version_requirements: '>=1.23,<2'
  tags:
    - deployment_core
    - build_essential
- name: packaging
  dev_version: '23.0'
  version_requirements: '>=20.9,<24'
  tags:
    - deployment_core
    - build_essential
- name: pandas
  dev_version: 1.5.3
  version_requirements: '>=1.0.0,<2'
  tags:
    - deployment_core
- name: protobuf
  dev_version: 3.20.3
- name: pytest
  dev_version: 7.1.2
- name_conda: python
  dev_version_conda: 3.8.13
  version_requirements_conda: '>=3.8.13, <3.11'
  tags:
    - build_essential
- name_pypi: torch
  name_conda: pytorch
  dev_version: 2.0.1
- name: pyyaml
  dev_version: '6.0'
  version_requirements: '>=6.0,<7'
  tags:
    - deployment_core
# For fsspec[http] in conda
- name_conda: requests
  dev_version_conda: 2.29.0
  version_requirements_conda: ''
- name: ruamel.yaml
  dev_version: 0.17.21
  tags:
    - build_essential
- name: s3fs
  dev_version: 2023.3.0
  version_requirements: '>=2022.11,<2024'
- name: scikit-learn
  dev_version: 1.3.0
  version_requirements: '>=1.2.1,<1.4'
  tags:
    - build_essential
- name: scipy
  dev_version: 1.9.3
  version_requirements: '>=1.9,<2'
- name: sentencepiece
  dev_version: 0.1.99
  version_requirements: '>=0.1.95,<0.2'
  requirements_extra_tags:
    - transformers
- name_conda: snowflake-connector-python
  name_pypi: snowflake-connector-python[pandas]
  dev_version: 3.1.0
  version_requirements: '>=3.0.4,<4'
- name: snowflake-snowpark-python
  dev_version: 1.5.1
  version_requirements: '>=1.5.1,<2'
  tags:
    - deployment_core
- name: starlette
  dev_version: 0.27.0
  from_channel: conda-forge
- name: sqlparse
  dev_version: 0.4.3
  version_requirements: '>=0.4,<1'
- name: tensorflow
  dev_version: 2.10.0
  version_requirements: '>=2.9,<3'
  requirements_extra_tags:
    - tensorflow
- name: torchdata
  dev_version: 0.6.1
  version_requirements: '>=0.4,<1'
  requirements_extra_tags:
    - torch
- name: transformers
  dev_version: 4.29.2
  version_requirements: '>=4.29.2,<5'
  requirements_extra_tags:
    - transformers
- name: types-requests
  dev_version: 2.30.0.0
- name: types-protobuf
  dev_version: 4.23.0.1
- name: types-PyYAML
  dev_version: 6.0.12
  from_channel: conda-forge
- name: typing-extensions
  dev_version: 4.5.0
  version_requirements: '>=4.1.0,<5'
  tags:
    - deployment_core
- name: xgboost
  dev_version: 1.7.3
  version_requirements: '>=1.7.3,<2'
  tags:
    - build_essential
- name: types-cachetools
  dev_version: 4.2.2
  from_channel: conda-forge
- name: cachetools
  dev_version: 4.2.2
