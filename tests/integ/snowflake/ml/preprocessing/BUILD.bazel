load("//bazel:py_rules.bzl", "py_test")

package(default_visibility = ["//visibility:public"])

SHARD_COUNT = 5
TIMEOUT = "long"  # 900s

py_test(
    name = "test_binarizer",
    srcs = ["test_binarizer.py"],
    deps = [
        "//snowflake/ml/preprocessing:binarizer",
        "//snowflake/ml/utils:connection_params",
        "//tests/integ/snowflake/ml/framework:utils",
    ],
)

py_test(
    name = "test_k_bins_discretizer",
    srcs = ["test_k_bins_discretizer.py"],
    shard_count = SHARD_COUNT,
    timeout = TIMEOUT,
    deps = [
        "//snowflake/ml/preprocessing:k_bins_discretizer",
        "//snowflake/ml/utils:connection_params",
        "//snowflake/ml/utils:sparse",
        "//tests/integ/snowflake/ml/framework:utils",
    ],
)

py_test(
    name = "test_label_encoder",
    srcs = ["test_label_encoder.py"],
    shard_count = SHARD_COUNT,
    timeout = TIMEOUT,
    deps = [
        "//snowflake/ml/preprocessing:label_encoder",
        "//snowflake/ml/utils:connection_params",
        "//tests/integ/snowflake/ml/framework:utils",
    ],
)

py_test(
    name = "test_max_abs_scaler",
    srcs = ["test_max_abs_scaler.py"],
    deps = [
        "//snowflake/ml/preprocessing:max_abs_scaler",
        "//snowflake/ml/utils:connection_params",
        "//tests/integ/snowflake/ml/framework:utils",
    ],
)

py_test(
    name = "test_min_max_scaler",
    srcs = ["test_min_max_scaler.py"],
    deps = [
        "//snowflake/ml/preprocessing:min_max_scaler",
        "//snowflake/ml/utils:connection_params",
        "//tests/integ/snowflake/ml/framework:utils",
    ],
)

py_test(
    name = "test_normalizer",
    srcs = ["test_normalizer.py"],
    shard_count = SHARD_COUNT,
    timeout = TIMEOUT,
    deps = [
        "//snowflake/ml/preprocessing:normalizer",
        "//snowflake/ml/utils:connection_params",
        "//tests/integ/snowflake/ml/framework:utils",
    ],
)

py_test(
    name = "test_one_hot_encoder",
    srcs = ["test_one_hot_encoder.py"],
    shard_count = SHARD_COUNT,
    timeout = TIMEOUT,
    deps = [
        "//snowflake/ml/preprocessing:one_hot_encoder",
        "//snowflake/ml/utils:connection_params",
        "//snowflake/ml/utils:sparse",
        "//tests/integ/snowflake/ml/framework:utils",
    ],
)

py_test(
    name = "test_ordinal_encoder",
    srcs = ["test_ordinal_encoder.py"],
    shard_count = SHARD_COUNT,
    timeout = TIMEOUT,
    deps = [
        "//snowflake/ml/preprocessing:ordinal_encoder",
        "//snowflake/ml/utils:connection_params",
        "//tests/integ/snowflake/ml/framework:utils",
    ],
)

py_test(
    name = "test_robust_scaler",
    srcs = ["test_robust_scaler.py"],
    shard_count = SHARD_COUNT,
    timeout = TIMEOUT,
    deps = [
        "//snowflake/ml/preprocessing:robust_scaler",
        "//snowflake/ml/utils:connection_params",
        "//tests/integ/snowflake/ml/framework:utils",
    ],
)

py_test(
    name = "test_standard_scaler",
    srcs = ["test_standard_scaler.py"],
    deps = [
        "//snowflake/ml/preprocessing:standard_scaler",
        "//snowflake/ml/utils:connection_params",
        "//tests/integ/snowflake/ml/framework:utils",
    ],
)

py_test(
    name = "test_simple_imputer",
    srcs = ["test_simple_imputer.py"],
    shard_count = SHARD_COUNT,
    timeout = TIMEOUT,
    deps = [
        "//snowflake/ml/preprocessing:simple_imputer",
        "//snowflake/ml/utils:connection_params",
        "//tests/integ/snowflake/ml/framework:utils",
    ],
)

py_test(
    name = "test_drop_input_cols",
    srcs = ["test_drop_input_cols.py"],
    deps = [
        "//snowflake/ml/preprocessing:binarizer",
        "//snowflake/ml/preprocessing:label_encoder",
        "//snowflake/ml/preprocessing:max_abs_scaler",
        "//snowflake/ml/preprocessing:min_max_scaler",
        "//snowflake/ml/preprocessing:normalizer",
        "//snowflake/ml/preprocessing:one_hot_encoder",
        "//snowflake/ml/preprocessing:ordinal_encoder",
        "//snowflake/ml/preprocessing:robust_scaler",
        "//snowflake/ml/preprocessing:simple_imputer",
        "//snowflake/ml/preprocessing:standard_scaler",
        "//snowflake/ml/utils:connection_params",
        "//tests/integ/snowflake/ml/framework:utils",
    ],
)
